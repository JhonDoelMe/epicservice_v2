# -*- coding: utf-8 -*-
"""
–ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ ¬´–≥–ª—É—Ö–∏—Ö –∫—É—Ç—ñ–≤¬ª –¥–ª—è aiogram 3.x.

–¶–µ–π –º–æ–¥—É–ª—å –∑–∞–±–µ–∑–ø–µ—á—É—î –Ω–µ–≤–∏–¥–∏–º—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ —Ö–µ–Ω–¥–ª–µ—Ä
–∑–∞–±—É–≤ –¥–æ–¥–∞—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –í—ñ–Ω —Ç–∞–∫–æ–∂ –Ω–∞–¥–∞—î –∑—Ä—É—á–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏
–¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ—ó –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (edit_vs_send) —ñ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
`require_kb` –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ –∫–æ–¥–æ–º, –Ω–∞–ø–∏—Å–∞–Ω–∏–º –ø—ñ–¥ aiogram 2.x.

–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ
----------

* ``safe_edit_or_send`` ‚Äî –±–µ–∑–ø–µ—á–Ω–æ –æ–Ω–æ–≤–ª—é—î —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∞ —è–∫—â–æ
  —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –Ω–µ –º–æ–∂–ª–∏–≤–µ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –±–æ—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–≤ –Ω–∞ —Ñ–æ—Ç–æ –∞–±–æ —Ç–µ–∫—Å—Ç –Ω–µ
  –∑–º—ñ–Ω—é—î—Ç—å—Å—è), –Ω–∞–¥—Å–∏–ª–∞—î –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ó–∞–≤–∂–¥–∏ –≥–∞—Ä–∞–Ω—Ç—É—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å
  fallback‚Äë–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏.
* ``install_kb_audit`` ‚Äî –ø—ñ–¥–∫–ª—é—á–∞—î middleware –¥–æ ``Dispatcher`` –¥–ª—è
  –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –≤–∏–ø–∞–¥–∫—ñ–≤, –∫–æ–ª–∏ –ø—ñ—Å–ª—è callback –≤—ñ–¥—Å—É—Ç–Ω—è
  –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞. –ó–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—î –∑–∞–ø–∞—Å–Ω—É.
* ``require_kb`` ‚Äî –∑–∞–≥–ª—É—à–∫–∞‚Äë–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ. –£ –≤–µ—Ä—Å—ñ—ó 3.x
  ``aiogram`` –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –ø—Ä–∏–º—É—Å–æ–≤—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä, —Ç–æ–º—É —Ñ—É–Ω–∫—Ü—ñ—è
  –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±–≥–æ—Ä–Ω—É—Ç–∏–π –≤–∏–∫–ª–∏–∫ –±–µ–∑ –∑–º—ñ–Ω.

–ü—ñ–¥–ª–∞—à—Ç–æ–≤—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é ``_fallback_kb()`` –ø—ñ–¥ –≤–∞—à—ñ callback‚Äë–¥–∞–Ω—ñ, —â–æ–±
–∫–Ω–æ–ø–∫–∏ ¬´üè† –ù–∞ –≥–æ–ª–æ–≤–Ω—É¬ª —Ç–∞ ¬´üì¶ –ú—ñ–π —Å–ø–∏—Å–æ–∫¬ª –≤–µ–ª–∏ —É –ø–æ—Ç—Ä—ñ–±–Ω—ñ –º—ñ—Å—Ü—è.
"""

from __future__ import annotations

import logging
from dataclasses import dataclass
from typing import Optional

from aiogram import BaseMiddleware, Dispatcher
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message

logger = logging.getLogger(__name__)


# ---------------------------- Fallback-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ -----------------------------

def _fallback_kb() -> InlineKeyboardMarkup:
    """
    –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞—Å—Ç—Ä—è–≥ –±–µ–∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤.

    –ö–Ω–æ–ø–∫–∏ —Å–ª—ñ–¥ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ –ø—ñ–¥ –≤–∞—à—ñ callback_data. –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω —ñ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
    –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üè† –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data="main:back")],
            [InlineKeyboardButton(text="üì¶ –ú—ñ–π —Å–ø–∏—Å–æ–∫", callback_data="main:my_list")],
        ]
    )
    return kb


# ------------------------------- safe_edit_or_send ----------------------------

async def safe_edit_or_send(
    bot,
    chat_id: int | str,
    text: str,
    *,
    message_id: Optional[int] = None,
    parse_mode: Optional[str] = None,
    reply_markup: Optional[InlineKeyboardMarkup] = None,
    disable_web_page_preview: Optional[bool] = None,
) -> Message:
    """
    –ù–∞–¥—ñ–π–Ω–æ –æ–Ω–æ–≤–ª—é—î UI:

    1. –Ø–∫—â–æ ``message_id`` –ø–µ—Ä–µ–¥–∞–Ω–æ ‚Äî —Å–ø—Ä–æ–±—É—î –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç
       –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ``edit_message_text``.
    2. –Ø–∫—â–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –Ω–µ–º–æ–∂–ª–∏–≤–µ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ
       –∞–±–æ –¥–æ–∫—É–º–µ–Ω—Ç, –∞–±–æ —Ç–µ–∫—Å—Ç –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è), –Ω–∞–¥—Å–∏–ª–∞—î –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
       ``send_message``.

    –£—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–≤–∂–¥–∏ –º–∞—é—Ç—å –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É: —è–∫—â–æ ``reply_markup`` –Ω–µ
    –ø–µ—Ä–µ–¥–∞–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è ``_fallback_kb()``. –¶–µ –∑–∞–ø–æ–±—ñ–≥–∞—î —Å–∏—Ç—É–∞—Ü—ñ—ó,
    –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–∞—î –∫–Ω–æ–ø–æ–∫ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.
    """
    if reply_markup is None:
        reply_markup = _fallback_kb()

    if message_id:
        try:
            return await bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=text,
                parse_mode=parse_mode,
                reply_markup=reply_markup,
                disable_web_page_preview=disable_web_page_preview,
            )
        except Exception as e:
            # –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —á–∞—Å—Ç–æ –ø–∞–¥–∞—î –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –º–µ–¥—ñ–∞ –∞–±–æ —è–∫—â–æ —Ç–µ–∫—Å—Ç –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è
            logger.debug("safe_edit_or_send: edit_message_text failed, falling back to send_message: %s", e)

    return await bot.send_message(
        chat_id=chat_id,
        text=text,
        parse_mode=parse_mode,
        reply_markup=reply_markup,
        disable_web_page_preview=disable_web_page_preview,
    )


# ------------------------------ Middleware-–∞—É–¥–∏—Ç ------------------------------

@dataclass
class _KbAuditConfig:
    """–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –¥–ª—è –∞—É–¥–∏—Ç—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä."""
    enforce_fallback: bool = True  # —è–∫—â–æ True ‚Äî –¥–æ–¥–∞—î—Ç—å—Å—è fallback, –∫–æ–ª–∏ –Ω–µ–º–∞—î –≤–ª–∞—Å–Ω–æ—ó –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏


class KbAuditMiddleware(BaseMiddleware):
    """
    Middleware –¥–ª—è –ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–Ω—è CallbackQuery —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—É–≤–∞–Ω–Ω—è –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏.

    –ü—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –ø–æ–≤'—è–∑–∞–Ω–µ –∑
    callback, –º–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É. –Ø–∫—â–æ –Ω—ñ, –ª–æ–≥—É–≤–∞—Ç–∏–º–µ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —ñ, –∑–∞
    –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é, –¥–æ–¥–∞–≤–∞—Ç–∏–º–µ fallback‚Äë–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É (—Ä–µ–¥–∞–≥—É—é—á–∏ markup –∞–±–æ
    –Ω–∞–¥—Å–∏–ª–∞—é—á–∏ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è).
    """

    def __init__(self, config: Optional[_KbAuditConfig] = None):
        super().__init__()
        self.config = config or _KbAuditConfig()

    async def __call__(self, handler, event, data):
        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä —Å–ø–æ—á–∞—Ç–∫—É
        result = await handler(event, data)
        # –ü—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏: —è–∫—â–æ —Ü–µ CallbackQuery ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
        try:
            if isinstance(event, CallbackQuery):
                msg: Optional[Message] = event.message
                if msg and (msg.reply_markup is None or not getattr(msg.reply_markup, "inline_keyboard", None)):
                    logger.warning(
                        "KbAudit: –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ—Å–ª—è callback '%s'", event.data
                    )
                    if self.config.enforce_fallback:
                        try:
                            await event.message.edit_reply_markup(reply_markup=_fallback_kb())
                        except Exception:
                            # –Ø–∫—â–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–µ –º–æ–∂–Ω–∞, –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–æ–≤–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
                            try:
                                await event.message.answer(
                                    "–û–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é:", reply_markup=_fallback_kb()
                                )
                            except Exception:
                                # –£ –∫—Ä–∞–π–Ω—ñ—Ö –≤–∏–ø–∞–¥–∫–∞—Ö —ñ–≥–Ω–æ—Ä—É—î–º–æ
                                pass
        except Exception as e:
            logger.debug("KbAudit post-hook error: %s", e)
        return result


# ---------------------------- –î–µ–∫–æ—Ä–∞—Ç–æ—Ä-—Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å ---------------------------

def require_kb(fn):
    """
    –ó–∞–≥–ª—É—à–∫–∞‚Äë–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ aiogram 2.x.

    –£ –≤–µ—Ä—Å—ñ—ó 3.x aiogram –∑–º—ñ–Ω–∏–ª–æ—Å—è API –¥–ª—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä. –î–µ—è–∫–∏–π –∫–æ–¥ —â–µ –º–æ–∂–µ
    –≤–∏–∫–ª–∏–∫–∞—Ç–∏ ``@require_kb`` –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏. –©–æ–± –Ω–µ
    –ª–∞–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ–π, –º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±–≥–æ—Ä—Ç–∫—É, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î
    –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫.
    """
    async def wrapper(*args, **kwargs):
        return await fn(*args, **kwargs)
    return wrapper


# ------------------------------ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è ----------------------------------

def install_kb_audit(dp: Dispatcher, *, enforce_fallback: bool = True) -> None:
    """
    –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ KbAuditMiddleware –¥–æ Dispatcher.

    –í–∏–∫–ª–∏–∫ ``install_kb_audit(dp)`` —É —Ç–≤–æ—î–º—É ``bot.py`` —Ä–µ—î—Å—Ç—Ä—É—î middleware,
    —è–∫–∏–π —Å—Ç–µ–∂–∏—Ç—å –∑–∞ callback‚Äë–∞–º–∏ —Ç–∞ –¥–æ–¥–∞—î fallback‚Äë–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É —Ç–∞–º, –¥–µ —Ü–µ
    –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ.

    Parameters
    ----------
    dp : Dispatcher
        –î–∏—Å–ø–µ—Ç—á–µ—Ä aiogram 3.x, –¥–æ —è–∫–æ–≥–æ –¥–æ–¥–∞—î—Ç—å—Å—è middleware.
    enforce_fallback : bool, optional
        –Ø–∫—â–æ True, middleware –ø—Ä–∏–º—É—Å–æ–≤–æ –¥–æ–¥–∞—î fallback‚Äë–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –ø—Ä–∏ —ó—ó
        –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ. –Ø–∫—â–æ False, –ª–∏—à–µ –ª–æ–≥—É–≤–∞—Ç–∏–º–µ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è.
    """
    dp.update.middleware(KbAuditMiddleware(_KbAuditConfig(enforce_fallback=enforce_fallback)))